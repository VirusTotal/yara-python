environment:
  global:
    # SDK v7.0 MSVC Express 2008's SetEnv.cmd script will fail if the
    # /E:ON and /V:ON options are not enabled in the batch script intepreter
    # See: http://stackoverflow.com/a/13751649/163740
    CMD_IN_ENV: "cmd /E:ON /V:ON /C .\\appveyor\\run_with_env.cmd"
    JANSSON_VERSION: "2.10"

  matrix:

    # Pre-installed Python versions, which Appveyor may upgrade to
    # a later point release.
    # See: http://www.appveyor.com/docs/installed-software#python

    - PYTHON: "C:\\Python35"
      PYTHON_VERSION: "3.5.x" # currently 3.5.4
      PYTHON_ARCH: "32"
      OPENSSL_LIB: "https://ci.appveyor.com/api/buildjobs/fakubeldw67e9pmg/artifacts/YARA.OpenSSL.x86.1.1.1.nupkg"
      VS: "Visual Studio 14 2015"

    - PYTHON: "C:\\Python35-x64"
      PYTHON_VERSION: "3.5.x" # currently 3.5.4
      PYTHON_ARCH: "64"
      OPENSSL_LIB: "https://ci.appveyor.com/api/buildjobs/q63539qt9yqaqspo/artifacts/YARA.OpenSSL.x64.1.1.1.nupkg"
      VS: "Visual Studio 14 2015 Win64"

    - PYTHON: "C:\\Python36"
      PYTHON_VERSION: "3.6.x" # currently 3.6.8
      PYTHON_ARCH: "32"
      OPENSSL_LIB: "https://ci.appveyor.com/api/buildjobs/fakubeldw67e9pmg/artifacts/YARA.OpenSSL.x86.1.1.1.nupkg"
      VS: "Visual Studio 14 2015"

    - PYTHON: "C:\\Python36-x64"
      PYTHON_VERSION: "3.6.x" # currently 3.6.8
      PYTHON_ARCH: "64"
      OPENSSL_LIB: "https://ci.appveyor.com/api/buildjobs/q63539qt9yqaqspo/artifacts/YARA.OpenSSL.x64.1.1.1.nupkg"
      VS: "Visual Studio 14 2015 Win64"

    - PYTHON: "C:\\Python37"
      PYTHON_VERSION: "3.7.x" # currently 3.7.0
      PYTHON_ARCH: "32"
      OPENSSL_LIB: "https://ci.appveyor.com/api/buildjobs/fakubeldw67e9pmg/artifacts/YARA.OpenSSL.x86.1.1.1.nupkg"
      VS: "Visual Studio 14 2015"

    - PYTHON: "C:\\Python37-x64"
      PYTHON_VERSION: "3.7.x" # currently 3.7.0
      PYTHON_ARCH: "64"
      OPENSSL_LIB: "https://ci.appveyor.com/api/buildjobs/q63539qt9yqaqspo/artifacts/YARA.OpenSSL.x64.1.1.1.nupkg"
      VS: "Visual Studio 14 2015 Win64"

    - PYTHON: "C:\\Python38"
      PYTHON_VERSION: "3.8.x" # currently 3.8.0
      PYTHON_ARCH: "32"
      OPENSSL_LIB: "https://ci.appveyor.com/api/buildjobs/fakubeldw67e9pmg/artifacts/YARA.OpenSSL.x86.1.1.1.nupkg"
      VS: "Visual Studio 14 2015"

    - PYTHON: "C:\\Python38-x64"
      PYTHON_VERSION: "3.8.x" # currently 3.8.0
      PYTHON_ARCH: "64"
      OPENSSL_LIB: "https://ci.appveyor.com/api/buildjobs/q63539qt9yqaqspo/artifacts/YARA.OpenSSL.x64.1.1.1.nupkg"
      VS: "Visual Studio 14 2015 Win64"

install:
  # If there is a newer build queued for the same PR, cancel this one.
  # The AppVeyor 'rollout builds' option is supposed to serve the same
  # purpose but it is problematic because it tends to cancel builds pushed
  # directly to master instead of just PR builds (or the converse).
  # credits: JuliaLang developers.
  - ps: if ($env:APPVEYOR_PULL_REQUEST_NUMBER -and $env:APPVEYOR_BUILD_NUMBER -ne ((Invoke-RestMethod `
        https://ci.appveyor.com/api/projects/$env:APPVEYOR_ACCOUNT_NAME/$env:APPVEYOR_PROJECT_SLUG/history?recordsNumber=50).builds | `
        Where-Object pullRequestId -eq $env:APPVEYOR_PULL_REQUEST_NUMBER)[0].buildNumber) { `
          throw "There are newer queued builds for this pull request, failing early." }

  - ps: "[System.Net.ServicePointManager]::SecurityProtocol = [System.Net.SecurityProtocolType]::Tls12"

  # Install Python (from the official .msi of http://python.org) and pip when
  # not already installed.
  - ps: if (-not(Test-Path($env:PYTHON))) { & appveyor\install.ps1 }

  - "echo %APPVEYOR_BUILD_WORKER_IMAGE%"

  # Prepend newly installed Python to the PATH of this build (this cannot be
  # done from inside the powershell script as it would require to restart
  # the parent CMD process).
  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"

  # Check that we have the expected version and architecture for Python
  - "python --version"
  - "python -c \"import struct; print(struct.calcsize('P') * 8)\""

  # Upgrade to the latest version of pip to avoid it displaying warnings
  # about it being out of date.
  - "python -m pip install --disable-pip-version-check --user --upgrade pip"

  # Install the build dependencies of the project. If some dependencies contain
  # compiled extensions and are not provided as pre-built wheel packages,
  # pip will build them from source using the MSVC compiler matching the
  # target Python version and architecture.

  # wheel version 0.29.0 is enforced because version 0.30.0 doesn't support
  # Python 2.6 anymore. Once we drop support for Python 2.6 we can use the
  # latest version of wheel.
  - "%CMD_IN_ENV% pip install wheel==0.29.0"

  # We are in projects/yara-python, lets go out to projects.
  - cd ..

  # Download precompiled OpenSSL library.
  - ps: Invoke-WebRequest "$env:OPENSSL_LIB" -OutFile "openssl.zip"
  - ps: Expand-Archive openssl.zip -DestinationPath openssl

  # Download and build jansson library.
  - ps: Invoke-WebRequest "https://github.com/akheron/jansson/archive/v$env:JANSSON_VERSION.zip" -OutFile "jansson.zip"
  - ps: Expand-Archive jansson.zip -DestinationPath .
  - cd jansson-%JANSSON_VERSION%
  - md build
  - cd build
  - cmake -DJANSSON_BUILD_DOCS=OFF -DJANSSON_WITHOUT_TESTS=ON -G "%VS%" ..
  - cmake --build . --config Release

  # We are in projects/jansson-%JANSSON_VERSION%/build, lets move to
  # projects/yara-python
  - cd ../../yara-python


clone_script:
- cmd: git clone -q --recursive --branch=%APPVEYOR_REPO_BRANCH% https://github.com/%APPVEYOR_REPO_NAME%.git %APPVEYOR_BUILD_FOLDER%
- cmd: git checkout -qf %APPVEYOR_REPO_COMMIT%

build_script:
  # Build the compiled extension
  - "%CMD_IN_ENV% python setup.py build_ext --enable-cuckoo --enable-dotnet
    -L../jansson-%JANSSON_VERSION%/build/lib/Release;../openssl/lib
    -I../jansson-%JANSSON_VERSION%/build/include;../openssl/include
    -DHASH_MODULE,HAVE_LIBCRYPTO
    -llibcrypto"

after_build:
  - "%CMD_IN_ENV% python setup.py install"

test_script:
  - "%CMD_IN_ENV% python tests.py"

after_test:
  # If tests are successful, create binary packages for the project.
  - "%CMD_IN_ENV% python setup.py bdist_wheel"
  - "%CMD_IN_ENV% python setup.py bdist_wininst"
  - "%CMD_IN_ENV% python setup.py bdist_msi"

artifacts:
  # Archive the generated packages in the ci.appveyor.com build report.
  - path: dist\*

deploy:
  tag: $(APPVEYOR_REPO_TAG_NAME)
  provider: GitHub
  auth_token:
    secure: d3qqX7bmrBiKJI38yFPc5vHrGGfS3LxLC7FaG6ewI2ghPPE22Pk6QtyrEFFb73PL
  artifact:  /.*\.exe/
  draft: true
  on:
    APPVEYOR_REPO_TAG: true        # deploy on tag push only

#on_success:
#  - TODO: upload the content of dist/*.whl to a public wheelhouse
#

# Uncomment these lines for enabling Remote Desktop for debugging purposes.
#on_finish:
#  - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
